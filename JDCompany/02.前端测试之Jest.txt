前端测试Jest

为什么要做前端测试 
首先，我认为前端测试并不是所有项目都必须的，因为写测试代码是需要要花费一定时间的，当项目比较简单的时候，花时间写测试代码可能反而会影响开发效率，但是需要指出的是，我们前端开发过程中，编写测试代码，有以下这些好处：

更快的发现bug，让绝大多数bug在开发阶段发现解决，提高产品质量
比起写注释，单元测试可能是更好的选择，通过运行测试代码，观察输入和输出，有时会比注释更能让别人理解你的代码（当然，重要的注释还是要写的。。。）
有利于重构，如果一个项目的测试代码写的比较完善，重构过程中改动时可以迅速的通过测试代码是否通过来检查重构是否正确，大大提高重构效率
编写测试代码的过程，往往可以让我们深入思考业务流程，让我们的代码写的更完善和规范。

什么是TDD和BDD
TDD与单元测试
什么是TDD
所谓TDD(Test Driven Development)，即测试驱动开发，简单的来说就是先编写测试代码，然后以使得所有测试代码都通过为目的，编写逻辑代码，是一种以测试来驱动开发过程的开发模式。
单元测试
所谓单元测试（unit testing），是指对软件中的最小可测试单元进行检查和验证。通俗的讲，在前端，单元可以理解为一个独立的模块文件，单元测试就是对这样一个模块文件的测试。
对于一个独立的模块（ES6模块），因为功能相对独立，所以我们可以首先编写测试代码，然后根据测试代码指导编写逻辑代码。
所以提到TDD，这里的测试一般是指单元测试
BDD与集成测试
什么是BDD
所谓BDD(Behavior Driven Development)，即行为驱动开发，简单的来说就是先编写业务逻辑代码，然后以使得所有业务逻辑按照预期结果执行为目的，编写测试代码，是一种以用户行为来驱动开发过程的开发模式。
集成测试
所谓集成测试（Integration Testing），是指对软件中的所有模块按照设计要求进行组装为完整系统后，进行检查和验证。通俗的讲，在前端，集成测试可以理解为对多个模块实现的一个交互完整的交互流程进行测试。
对于多个模块（ES6模块）组成的系统，需要首先将交互行为完善，才能按照预期行为编写测试代码。
所以提到BDD，这里的测试一般是指集成测试。
